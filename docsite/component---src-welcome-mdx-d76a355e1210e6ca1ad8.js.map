{"version":3,"sources":["webpack:///../src/welcome.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"2OAMaA,G,UAAe,S,iMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,8BACE,iBAAGC,WAAW,cAAd,iDAEF,qBAAG,sBAAQA,WAAW,KAAnB,YACH,gCACA,sBACE,kBAAIA,WAAW,MAAf,QAA6B,0BAAYA,WAAW,MAAvB,sBAA7B,2BAEF,uBACA,qBAAG,sBAAQA,WAAW,KAAnB,YACH,qBAAG,sBAAQA,WAAW,KAAnB,OACH,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6BAIL,sDACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+BAIL,qBAAG,sBAAQA,WAAW,KAAnB,WACH,6BAAY,0BAAYA,WAAW,KAAvB,oBAAZ,WACG,0BAAYA,WAAW,KAAvB,uCADH,QAEA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,mDAIL,wEAAuD,0BAAYA,WAAW,KAAvB,iBAAvD,kCACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,2OAiBL,sFACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,8C,+LAQTJ,EAAWK,gBAAiB","file":"component---src-welcome-mdx-d76a355e1210e6ca1ad8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/zhenyulei/Documents/JD/2020/PLUS/code/component/plus/reactUI/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <blockquote>\n      <p parentName=\"blockquote\">{`欢迎访问PLUS会员业务组件库，该组件库用来构建京东PLUS会员业务组件，便于后续开发。`}</p>\n    </blockquote>\n    <p><strong parentName=\"p\">{`开发者使用方式`}</strong></p>\n    <p>{`更新官方方式：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`1 执行 `}<inlineCode parentName=\"li\">{`npm run docz:build`}</inlineCode>{` 之后，在提交 git，则自动更新官方网站。`}</li>\n    </ul>\n    <hr></hr>\n    <p><strong parentName=\"p\">{`组件库使用方式`}</strong></p>\n    <p><strong parentName=\"p\">{`安装`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`npm install reactui -S\n`}</code></pre>\n    <p>{`组件样式基于 sass 开发，需要安装 node-sass`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`npm install node-sass -D\n`}</code></pre>\n    <p><strong parentName=\"p\">{`支持按需加载`}</strong></p>\n    <p>{`用户安装 `}<inlineCode parentName=\"p\">{`npm i reactui -S`}</inlineCode>{`,\n首先安装 `}<inlineCode parentName=\"p\">{`@nutui/babel-plugin-separate-import`}</inlineCode>{` 插件:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`npm i @nutui/babel-plugin-separate-import -D\n`}</code></pre>\n    <p>{`然后配置一下babel的配置文件，如果使用的create-react-app脚手架，则需要执行 `}<inlineCode parentName=\"p\">{`npm run eject`}</inlineCode>{` 后，在package.json中新增 babel的配置项：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`\"babel\": {\n    \"presets\": [\n      \"react-app\"\n    ],\n    \"plugins\": [\n      [\n        \"import\",\n        {\n          \"libraryName\": \"reactui\",\n          \"libraryDirectory\": \"dist/components\"\n        }\n      ]\n    ]\n}\n`}</code></pre>\n    <p>{`接下来，我们就可以在项目里只引入用到的组件了。默认情况下，样式也无需单独引入。插件会自动将组件的 SCSS 样式引入方式。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Button } from 'reactui';\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}